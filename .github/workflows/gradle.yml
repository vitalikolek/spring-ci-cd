name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Allow gradlew execute
        run: chmod +x gradlew

      - name: Clean and Build with Gradle Wrapper
        run: ./gradlew clean build --no-daemon

      - name: Debug Build Output
        run: ls -R build/libs

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: build/libs/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: jar-file
          path: build/libs

      - name: Debug Downloaded JAR
        run: ls -R build/libs

      - name: Publish to Docker Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: vitalikolek/spring-boot-ci-cd
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Deploy to Render
        run: curl -X POST ${{ secrets.RENDER_HOOK }}
